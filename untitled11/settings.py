"""
Django settings for untitled11 project.

Generated by 'django-admin startproject' using Django 3.0.5.

For more information on this file, see
https://docs.djangoproject.com/en/3.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.0/ref/settings/
"""

import os

# Build paths inside the project like this: os.path.join(BASE_DIR, ...)
BASE_DIR = os.path.dirname(os.path.dirname(os.path.abspath(__file__)))


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = ')bfp4wt5ynh87oev#mq(=fhb2t+fz@(zsam$oi9w4)w%45_0n%'

# SECURITY WARNING: don't run with debug turned on in production!
# 在部署在服务器后, 需要改成False
DEBUG = True

ALLOWED_HOSTS = ["*"]


# Application definition

INSTALLED_APPS = [
    # 后台UI 设置
    "simpleui",
    'django.contrib.admin',
    #包含身份认证 ( authentication ) 框架的核心，以及它的默认模型。
    'django.contrib.auth',
    #是 Django 内容类型系统，它允许权限与您创建的模型相关联。
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    # django-rest-framework API 插件
    'rest_framework',
    'rest_framework.authtoken',
    'app001',
    'app002',
    'app003',
    'app004',
    # 'app005',
    # 'app004.apps.App004Config',
    # 富文本的显示设置
    'DjangoUeditor',
    #debug
    'django_pdb',
    'debug_toolbar',
    'django_admin_lightweight_date_hierarchy',


]
# AUTH_USER_MODEL = 'users.User'

#+++REST_FRAMEWORK 的设置+++
REST_FRAMEWORK = {
    'DEFAULT_PERMISSION_CLASSES': [
        'rest_framework.permissions.IsAdminUser',
        # 下面的这个话, 需要在添加身份验证的时候使用, 在不需要使用身份验证的shh,
        'rest_framework.permissions.DjangoModelPermissionsOrAnonReadOnly',],
        'DEFAULT_PAGINATION_CLASS': 'rest_framework.pagination.PageNumberPagination',
        'PAGE_SIZE': 10,
    # 身份信息的认证
    'DEFAULT_AUTHENTICATION_CLASSES': (
            'rest_framework.authentication.BasicAuthentication',
            'rest_framework.authentication.SessionAuthentication',
            'rest_framework.authentication.TokenAuthentication',

    )



}
# 中间件的设置
MIDDLEWARE = [
    #管理跨请求的会话。
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    #使用会话将用户与请求相关联。
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
    # debug
    'django_pdb.middleware.PdbMiddleware',
    'debug_toolbar.middleware.DebugToolbarMiddleware',
]

ROOT_URLCONF = 'untitled11.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        # 模板的查找路径
        'DIRS': [os.path.join(BASE_DIR, 'templates'),
                ],
        # 是否查找App下的模板文件
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'untitled11.wsgi.application'


# Database
# https://docs.djangoproject.com/en/3.0/ref/settings/#databases
# django 自带的数据库,sqldb
# DATABASES = {
#     'default': {
#         'ENGINE': 'django.db.backends.sqlite3',
#         'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
#     }
# }


# mysql 数据库的配置
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': "django_sql",
        'USER':'root',
        'PASSWORD':'zouhao',
        'HOST': '127.0.0.1',
        "PORT": '3306'
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.0/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]


# Internationalization
# https://docs.djangoproject.com/en/3.0/topics/i18n/

LANGUAGE_CODE = 'zh-hans' #语言修改为中文

TIME_ZONE = 'Asia/Shanghai'


USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.0/howto/static-files/

STATIC_URL = '/static/'

#STATIC_URL 代表资源路由
STATICFILES_DIRS = (
    os.path.join(BASE_DIR, 'static'),
)

#media用来存放上传的文件，设置文件上传路径，图片上传、文件上传都会存放在此目录里
MEDIA_URL = '/media/'
MEDIA_ROOT = os.path.join(BASE_DIR, 'media')
